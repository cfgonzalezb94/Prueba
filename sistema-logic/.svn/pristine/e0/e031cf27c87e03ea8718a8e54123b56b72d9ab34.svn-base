package co.com.softone.ingesoft.logic.entities;

import java.io.Serializable;
import javax.persistence.*;
import java.util.Date;
import java.util.List;


/**
 * The persistent class for the factura database table.
 * 
 */
@Entity
@NamedQuery(name="Factura.findAll", query="SELECT f FROM Factura f")
public class Factura implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	private Integer id;

	@Column(name="CONDICIONES_PAGO")
	private String condicionesPago;

	@Lob
	private String descripcion;

	@Temporal(TemporalType.DATE)
	private Date fecha;

	private double iva;

	private double subtotal;

	@Column(name="VALOR_TOTAL")
	private double valorTotal;

	//bi-directional many-to-one association to DetallesAdicionale
	@OneToMany(mappedBy="factura")
	private List<DetallesAdicionale> detallesAdicionales;

	//bi-directional many-to-one association to Cliente
	@ManyToOne
	@JoinColumn(name="ID_CLIENTE")
	private Cliente cliente;

	//bi-directional many-to-one association to EstadoFactura
	@ManyToOne
	@JoinColumn(name="ID_ESTADO_FACTURA")
	private EstadoFactura estadoFactura;

	//bi-directional many-to-one association to Item
	@OneToMany(mappedBy="factura")
	private List<Item> items;

	public Factura() {
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getCondicionesPago() {
		return this.condicionesPago;
	}

	public void setCondicionesPago(String condicionesPago) {
		this.condicionesPago = condicionesPago;
	}

	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	public double getIva() {
		return this.iva;
	}

	public void setIva(double iva) {
		this.iva = iva;
	}

	public double getSubtotal() {
		return this.subtotal;
	}

	public void setSubtotal(double subtotal) {
		this.subtotal = subtotal;
	}

	public double getValorTotal() {
		return this.valorTotal;
	}

	public void setValorTotal(double valorTotal) {
		this.valorTotal = valorTotal;
	}

	public List<DetallesAdicionale> getDetallesAdicionales() {
		return this.detallesAdicionales;
	}

	public void setDetallesAdicionales(List<DetallesAdicionale> detallesAdicionales) {
		this.detallesAdicionales = detallesAdicionales;
	}

	public DetallesAdicionale addDetallesAdicionale(DetallesAdicionale detallesAdicionale) {
		getDetallesAdicionales().add(detallesAdicionale);
		detallesAdicionale.setFactura(this);

		return detallesAdicionale;
	}

	public DetallesAdicionale removeDetallesAdicionale(DetallesAdicionale detallesAdicionale) {
		getDetallesAdicionales().remove(detallesAdicionale);
		detallesAdicionale.setFactura(null);

		return detallesAdicionale;
	}

	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}

	public EstadoFactura getEstadoFactura() {
		return this.estadoFactura;
	}

	public void setEstadoFactura(EstadoFactura estadoFactura) {
		this.estadoFactura = estadoFactura;
	}

	public List<Item> getItems() {
		return this.items;
	}

	public void setItems(List<Item> items) {
		this.items = items;
	}

	public Item addItem(Item item) {
		getItems().add(item);
		item.setFactura(this);

		return item;
	}

	public Item removeItem(Item item) {
		getItems().remove(item);
		item.setFactura(null);

		return item;
	}

}